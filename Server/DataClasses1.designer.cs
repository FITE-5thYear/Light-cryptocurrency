#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Server
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Cryptocurrency")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::Server.Properties.Settings.Default.CryptocurrencyConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Transaction> Transactions
		{
			get
			{
				return this.GetTable<Transaction>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Transactions")]
	public partial class Transaction
	{
		
		private int _Transaction_Id;
		
		private int _sender_Id;
		
		private int _reciver_Id;
		
		private decimal _amount;
		
		public Transaction()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Transaction_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Transaction_Id
		{
			get
			{
				return this._Transaction_Id;
			}
			set
			{
				if ((this._Transaction_Id != value))
				{
					this._Transaction_Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sender_Id", DbType="Int NOT NULL")]
		public int sender_Id
		{
			get
			{
				return this._sender_Id;
			}
			set
			{
				if ((this._sender_Id != value))
				{
					this._sender_Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reciver_Id", DbType="Int NOT NULL")]
		public int reciver_Id
		{
			get
			{
				return this._reciver_Id;
			}
			set
			{
				if ((this._reciver_Id != value))
				{
					this._reciver_Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Money NOT NULL")]
		public decimal amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this._amount = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Users_Id;
		
		private string _Users_Name;
		
		private string _User_Password;
		
		private decimal _User_balance;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsers_IdChanging(int value);
    partial void OnUsers_IdChanged();
    partial void OnUsers_NameChanging(string value);
    partial void OnUsers_NameChanged();
    partial void OnUser_PasswordChanging(string value);
    partial void OnUser_PasswordChanged();
    partial void OnUser_balanceChanging(decimal value);
    partial void OnUser_balanceChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Users_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Users_Id
		{
			get
			{
				return this._Users_Id;
			}
			set
			{
				if ((this._Users_Id != value))
				{
					this.OnUsers_IdChanging(value);
					this.SendPropertyChanging();
					this._Users_Id = value;
					this.SendPropertyChanged("Users_Id");
					this.OnUsers_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Users_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Users_Name
		{
			get
			{
				return this._Users_Name;
			}
			set
			{
				if ((this._Users_Name != value))
				{
					this.OnUsers_NameChanging(value);
					this.SendPropertyChanging();
					this._Users_Name = value;
					this.SendPropertyChanged("Users_Name");
					this.OnUsers_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Password", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string User_Password
		{
			get
			{
				return this._User_Password;
			}
			set
			{
				if ((this._User_Password != value))
				{
					this.OnUser_PasswordChanging(value);
					this.SendPropertyChanging();
					this._User_Password = value;
					this.SendPropertyChanged("User_Password");
					this.OnUser_PasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_balance", DbType="Money NOT NULL")]
		public decimal User_balance
		{
			get
			{
				return this._User_balance;
			}
			set
			{
				if ((this._User_balance != value))
				{
					this.OnUser_balanceChanging(value);
					this.SendPropertyChanging();
					this._User_balance = value;
					this.SendPropertyChanged("User_balance");
					this.OnUser_balanceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
